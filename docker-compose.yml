---

version: "3.9"

#networks: #This is used if you have a reverse proxy. I use Nginx Proxy Manager but anything will do
#  proxy:
#    external:
#      name: proxy

networks:
  arr-net:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: arr-net
      
services:

  #download client  
  sabnzbd:
    image: lscr.io/linuxserver/sabnzbd
    container_name: sabnzbd
    hostname: sabnzbd
    environment:
      - PUID=${USER_ID}
      - PGID=${USER_ID}
      - TZ=${TZ}
    volumes:
      - ${BASE_PATH}/sabnzbd/config:/config
      - ${SHARE_PATH}:/share #Access to the USB share
#      - ${SHARE_PATH}/Complete:/downloads #Access to the entire share      
#      - ${SHARE_PATH}/Incomplete:/incomplete-downloads # completed directory for downloads. this contains the category directories 
#      - "/storage/Downloads/complete:/downloads" # completed directory for downloads. this contains the category directories
#      - "/downloads/incomplete:/incomplete-downloads" # "temp" directory for downloads
    networks:
      - arr-net
    ports:
      - 8080:8080 # port mapping
    restart: unless-stopped
      
  #Radarr - used to find movies automatically
  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    hostname: radarr
    environment:
      - PUID=${USER_ID}
      - PGID=${USER_ID}
      - TZ=${TZ}
    volumes:
      - ${BASE_PATH}/radarr/config:/config
      - ${SHARE_PATH}:/share #Access to the USB share
      - ${MEDIA_PATH}:/media #Access to the entire share
    networks:
      - arr-net
    #networks: #Does not connect to overseer if you use NPM
    #  - proxy
    ports:
      - 7878:7878
    restart: unless-stopped
    
  #Sonarr - used to find tv shows automatically
  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    hostname: sonarr
    environment:
      - PUID=${USER_ID}
      - PGID=${USER_ID}
      - TZ=${TZ}
    volumes:
      - ${BASE_PATH}/sonarr/config:/config
      - ${SHARE_PATH}:/share #Access to the USB share
      - ${MEDIA_PATH}:/media #Access to the entire share
    networks:
      - arr-net
    #networks: #Does not connect to overseer if you use NPM
    #  - proxy
    ports:
      - 8989:8989
    restart: unless-stopped
  
  #Readarr - Used to download books
  readarr:
    image: lscr.io/linuxserver/readarr:develop
    container_name: readarr
    hostname: readarr
    environment:
      - PUID=${USER_ID}
      - PGID=${USER_ID}
      - TZ=${TZ}
    volumes:
      - ${BASE_PATH}/readarr/config:/config
      - ${SHARE_PATH}:/share 
      - ${MEDIA_PATH}:/media #Access to the entire share
    networks:
      - arr-net
    ports:
      - 8787:8787
    restart: unless-stopped
    
  #Lidarr - Used to download music 
  lidarr:
    image: lscr.io/linuxserver/lidarr:latest
    container_name: lidarr
    hostname: lidarr
    environment:
      - PUID=${USER_ID}
      - PGID=${USER_ID}
      - TZ=${TZ}
    volumes:
      - ${BASE_PATH}/lidarr/config:/config
      - ${SHARE_PATH}:/share 
      - ${MEDIA_PATH}:/media #Access to the entire share
    networks:
      - arr-net
    ports:
      - 8686:8686
    restart: unless-stopped
    
  #Prowlarr - manages your Sonarr, Radarr and download client
  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    hostname: prowlarr
    environment:
      - PUID=${USER_ID}
      - PGID=${USER_ID}
      - TZ=${TZ}
    volumes:
      - ${BASE_PATH}/prowlarr/config:/config
    #networks:
    #  - proxy
    networks:
      - arr-net
    ports:
      - 9696:9696
    restart: unless-stopped
  

  #Overseer - allows users to request media on their own
  overseerr:
    image: lscr.io/linuxserver/overseerr:latest
    container_name: overseerr
    hostname: overseer
    environment:
      - PUID=${USER_ID}
      - PGID=${USER_ID}
      - TZ=${TZ}
    volumes:
      - ${BASE_PATH}/overseer/config:/config
      - ${SHARE_PATH}:/share #Access to the USB share
    #networks:
    #  - proxy
    networks:
      - arr-net
    ports:
      - 5055:5055
    restart: unless-stopped

  #Tautulli - for plex statistics. Very useful when troubleshooting performance issues
  tautulli:
    image: lscr.io/linuxserver/tautulli:latest
    container_name: tautulli
    hostname: tautulli
    environment:
      - PUID=${USER_ID}
      - PGID=${USER_ID}
      - TZ=${TZ}
    volumes:
      - ${BASE_PATH}/tautulli:/config
#    networks:
#      - proxy
    networks:
      - arr-net
    ports:
      - 8181:8181
    restart: unless-stopped

  #Plex Auto Languages - This switchs languages automatically example: watching english show and non english speaks you get subtitle lol
  plexautolanguages:
    image: remirigal/plex-auto-languages:latest
    container_name: plex-auto-languages
    hostname: plexautolanguages
    environment:
      - PLEX_URL=${PLEX_URL} #This is your local URl example: http://192.168.1.10:32400
      #To find your plex token go to https://app.plex.tv/, go to your library, click on the 3 dots on the bottom right of one of your tv/movie posters
      #Then click "View XML" in the bottom right of that popup, look at the URL of the XML window and find your X-Plex-Token= in the URL (at the very end)
      - PLEX_TOKEN=${PLEX_TOKEN}
      - TZ=${TZ}
    volumes:
      - ${BASE_PATH}/pal/config:/config
    networks:
      - arr-net
      
  calibre:
    image: lscr.io/linuxserver/calibre #:latest
    container_name: calibre
    hostname: calibre
#    depends_on:  # start readarr before calibre
#        - readarr
    security_opt:
      - seccomp:unconfined #optional
    environment:
      - TRUSTED_HOSTS=readarr  # whitelist readarr
      - PUID=${USER_ID}
      - PGID=${USER_ID}
      - TZ=${TZ}
      - CUSTOM_PORT=8585

#      - FM_HOME=${MEDIA_PATH}/Books/eBooks
    volumes:
      - ${BASE_PATH}/calibre/config:/config
      - ${MEDIA_PATH}/Books/eBooks/Calibre Library:/books
    networks:
      - arr-net
    ports: 
#        - "8585:8080"
        - "8585:8585" 
        - "8081:8081"
    restart: unless-stopped

  #Plex - used to display the media
  #
  #This can also be replaced by Emby/Jellyfin
 # plex:
#    image: lscr.io/linuxserver/plex:latest
#    container_name: plex
#    network_mode: host
#    environment:
#      - PUID=${USER_ID}
#      - PGID=${USER_ID}
#      - TZ=${TZ}
#      - VERSION=docker
#      - PLEX_CLAIM=${PLEX_CLAIM}
#    ports:
#      - 32400:32400
#    devices:
#     - /dev/dri:/dev/dri #Required for plex HW transcoding / QuickSync
#    volumes:
#      - ${BASE_PATH}/plex/config:/config
#      - ${SHARE_PATH}/media/tv:/tv
#      - ${SHARE_PATH}/media/movies:/movies
#    restart: unless-stopped
  
    
#  #Flaresolerr - Used as a proxy server to bypass Cloudflare and DDoS-GUARD protection.
# flaresolverr:
#    # DockerHub mirror flaresolverr/flaresolverr:latest
#    image: ghcr.io/flaresolverr/flaresolverr:latest
#    container_name: flaresolverr
#    environment:
#      - LOG_LEVEL=info
#      - LOG_HTML=false
#      - CAPTCHA_SOLVER=none
#      - TZ=${TZ}
#    ports:
#      - 8191:8191
#    restart: unless-stopped
    
  #Gluetun - vpn container
#  gluetun: #Setup for this container will be different depending on your VPN of choice
#    image: qmcgaw/gluetun
#    container_name: gluetun
#    # line above must be uncommented to allow external containers to connect.
#    # See https://github.com/qdm12/gluetun-wiki/blob/main/setup/connect-a-container-to-gluetun.md#external-container-to-gluetun
#    cap_add:
#      - NET_ADMIN
#    devices:
#      - /dev/net/tun:/dev/net/tun
#    networks:
#      - arr-net
#    ports:
#      - 8888:8888/tcp # HTTP proxy
#      - 8388:8388/tcp # Shadowsocks
#      - 8388:8388/udp # Shadowsocks
  #    - 8080:8080 #Qbittorent Web UI
  #    - 8081:8081 #Qbittorent Web UI
#      - 6881:6881
#      - 6881:6881/udp
#    volumes:
#      - ${BASE_PATH}/gluetun:/gluetun
#    environment:
#      - VPN_SERVICE_PROVIDER=${VPN_SERVICE_PROVIDER} # Example airvpn
#      - VPN_TYPE=wireguard #Wireguard is generally faster than OpenVPN
#      - WIREGUARD_PRIVATE_KEY=${WIREGUARD_PRIVATE_KEY} #Example IE4cdRxZzoy/HvlLXVLB.2Hy@d=
#      - WIREGUARD_PRESHARED_KEY=${WIREGUARD_PRESHARED_KEY} #Example IE4cdRxZzoy/HvlLXVLB.2Hy@d=
#      - WIREGUARD_ADDRESSES=${WIREGUARD_ADDRESSES} #Example 101.14.14.28/32
#      - SERVER_HOSTNAMES=${SERVER_HOSTNAMES} #Example vpn.airdns.org
#      - SERVER_NAMES=${VPN_SERVER_NAMES} #Example Dallim
#      - SERVER_CITIES=${VPN_SERVER_CITIES} #Example Albasserdonia
#      - FIREWALL_VPN_INPUT_PORTS=${FIREWALL_VPN_INPUT_PORTS} #Example 8926 - Used for port forwarding
#      - VPN_ENDPOINT_IP=${VPN_ENDPOINT_IP}
#      - VPN_ENDPOINT_PORT=${VPN_ENDPOINT_PORT}
      

  #De-unhealth - used to restart qbitorrent if gluetun VPN tunnel ever drops
#  deunhealth:
#    build: .
#    image: qmcgaw/deunhealth
#    container_name: deunhealth

#    environment:
#      - LOG_LEVEL=info
#      - HEALTH_SERVER_ADDRESS=127.0.0.1:9999
#      - TZ=${TZ}
#    restart: always
#    networks:
#      - arr-net
#    volumes:
#      - /var/run/docker.sock:/var/run/docker.sock
      

  
  #Tdarr - to transcode videos from one format to another like x265 or H.265
  #
  #This container requires a decent amount of horse power to run but will save space in the long run
#  tdarr:
#    container_name: tdarr
#    image: ghcr.io/haveagitgat/tdarr:latest
#    restart: unless-stopped
#    ports:
#      - 8265:8265 # webUI port
#      - 8266:8266 # server port
#    environment:
#      - TZ=${TZ}
#      - PUID=${USER_ID}
#      - PGID=${USER_ID}
#      - UMASK_SET=002
#      - nodeName=ServerNode
#      - serverIP=0.0.0.0
#      - serverPort=8266
#      - webUIPort=8265
#      - internalNode=true
#      - inContainer=true
#      - ffmpegVersion=6
#    volumes:
#      - ${BASE_PATH}/tdarr/server:/app/server
#      - ${BASE_PATH}/tdarr/configs:/app/configs
#      - ${BASE_PATH}/tdarr/logs:/app/logs
#      - ${SHARE_PATH}:/media
#      - /transcode_cache:/temp
#    devices:
#     - /dev/dri:/dev/dri #Required for HW transcoding / QuickSync
     
     
  #Bazarr - for subtitles. Try to use SRT format if you can rather than PGS due to performance issues
 # bazarr:
#    container_name: bazarr
#    image: lscr.io/linuxserver/bazarr:latest
#    restart: unless-stopped
#    environment:
#      - PUID=${USER_ID}
#      - PGID=${USER_ID}
#      - TZ=${TZ}
#    volumes:
#      - ${BASE_PATH}/bazarr/config:/config
#      - ${SHARE_PATH}:/share
#    ports:
#      - 6767:6767
      
